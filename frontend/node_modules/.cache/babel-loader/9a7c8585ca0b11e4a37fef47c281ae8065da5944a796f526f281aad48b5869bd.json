{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\WebContentQnA\\\\frontend\\\\src\\\\components\\\\Answer.jsx\";\nimport React from 'react';\nimport { Card, Badge } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Answer = ({\n  answer\n}) => {\n  // Helper function to determine confidence level color\n  const getConfidenceColor = confidence => {\n    if (confidence >= 0.7) return 'success';\n    if (confidence >= 0.4) return 'warning';\n    return 'danger';\n  };\n\n  // Helper function to format confidence as percentage\n  const formatConfidence = confidence => {\n    return `${Math.round(confidence * 100)}%`;\n  };\n\n  // Helper function to get model badge color\n  const getModelBadgeColor = model => {\n    return model === 'distilbert' ? 'info' : 'secondary';\n  };\n\n  // Helper function to get model display name\n  const getModelDisplayName = model => {\n    if (model === 'distilbert') return 'DistilBERT';\n    return 'TF-IDF + spaCy';\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            bg: getModelBadgeColor(answer.model_used),\n            className: \"me-2\",\n            children: getModelDisplayName(answer.model_used)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: getConfidenceColor(answer.confidence),\n            children: [\"Confidence: \", formatConfidence(answer.confidence)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-3 text-muted\",\n        children: [\"Q: \", answer.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"border-bottom pb-3\",\n        children: answer.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), answer.context && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Context:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", answer.context]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = Answer;\nexport default Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","Card","Badge","jsxDEV","_jsxDEV","Answer","answer","getConfidenceColor","confidence","formatConfidence","Math","round","getModelBadgeColor","model","getModelDisplayName","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","bg","model_used","Subtitle","question","Text","context","_c","$RefreshReg$"],"sources":["D:/Projects/WebContentQnA/frontend/src/components/Answer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, Badge } from 'react-bootstrap';\r\n\r\nconst Answer = ({ answer }) => {\r\n  // Helper function to determine confidence level color\r\n  const getConfidenceColor = (confidence) => {\r\n    if (confidence >= 0.7) return 'success';\r\n    if (confidence >= 0.4) return 'warning';\r\n    return 'danger';\r\n  };\r\n\r\n  // Helper function to format confidence as percentage\r\n  const formatConfidence = (confidence) => {\r\n    return `${Math.round(confidence * 100)}%`;\r\n  };\r\n\r\n  // Helper function to get model badge color\r\n  const getModelBadgeColor = (model) => {\r\n    return model === 'distilbert' ? 'info' : 'secondary';\r\n  };\r\n\r\n  // Helper function to get model display name\r\n  const getModelDisplayName = (model) => {\r\n    if (model === 'distilbert') return 'DistilBERT';\r\n    return 'TF-IDF + spaCy';\r\n  };\r\n\r\n  return (\r\n    <Card className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <Card.Title className=\"d-flex justify-content-between align-items-center\">\r\n          <span>Answer</span>\r\n          <div>\r\n            <Badge \r\n              bg={getModelBadgeColor(answer.model_used)}\r\n              className=\"me-2\"\r\n            >\r\n              {getModelDisplayName(answer.model_used)}\r\n            </Badge>\r\n            <Badge \r\n              bg={getConfidenceColor(answer.confidence)}\r\n            >\r\n              Confidence: {formatConfidence(answer.confidence)}\r\n            </Badge>\r\n          </div>\r\n        </Card.Title>\r\n        <Card.Subtitle className=\"mb-3 text-muted\">\r\n          Q: {answer.question}\r\n        </Card.Subtitle>\r\n        <Card.Text className=\"border-bottom pb-3\">\r\n          {answer.answer}\r\n        </Card.Text>\r\n        \r\n        {answer.context && (\r\n          <div className=\"mt-3\">\r\n            <small className=\"text-muted\">\r\n              <strong>Context:</strong> {answer.context}\r\n            </small>\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Answer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}